using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using Core.GameManagers;
using Core.Singletons;
using MoonSharp.Interpreter;
using UnityEngine;

namespace Core.GameModes
{
    public class MoonSharpTypesManager : SingletonMonoBehaviour<MoonSharpTypesManager>
    {
        public static List<Type> GetMoonSharpTypes(Assembly a)
        {
            return a.GetTypes().Where(t => t.GetCustomAttributes(typeof(MoonSharpUserDataAttribute), false).Length > 0).ToList();
        }

        [UnityEditor.Callbacks.DidReloadScripts]
        public static void GenerateMoonSharpTypes()
        {
            /* Find all types marked with MoonSharpUserData attribute */
            List<Type> lua_proxy_types = GetMoonSharpTypes(typeof(GameManagerAPI).Assembly);

            /* Compile a lua bindings file */
            string final_lua_file_str = "-- WARNING : DO NOT MESS WITH.\n--THIS FILE HAS BEEN AUTOGENERATED BY ArborLuaBindingsGenerator.cs.\n\n";

            foreach (Type t in lua_proxy_types)
            {
                string shortened_type_name = t.Name;
                if (t.Name.Contains("LuaProxy"))
                    shortened_type_name = shortened_type_name.Remove(t.Name.Length - 8, 8);

                /* Global object */
                final_lua_file_str += shortened_type_name + "={};\n";

                /* Functions */
                MethodInfo[] methods = t.GetMethods();
                foreach(MethodInfo m in methods)
                {
                    if (!m.IsPublic)
                        continue;
                    if (m.DeclaringType != t)
                        continue;

                    final_lua_file_str += shortened_type_name + "." + m.Name + "=function(";

                    /* Get parameters */
                    int length = m.GetParameters().Length;
                    int i = 0;
                    foreach(ParameterInfo p in m.GetParameters())
                    {
                        if (i < length-1)
                            final_lua_file_str += p.Name + "__" + p.ParameterType.Name + ",";
                        else
                            final_lua_file_str += p.Name + "__" + p.ParameterType.Name;
                        i++;
                    }

                    final_lua_file_str += ")end\n";
                }
            }

            File.WriteAllText("./Assets/Resources/GameModes/_bindings_autogen.lua", final_lua_file_str);
            Debug.Log("Finished generating Lua bindings.");
        }
    }
}